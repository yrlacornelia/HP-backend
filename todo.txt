controllers


renskriva och få allt att funka

börja med user profile etc
user profile page:
logga in x
se sin info x
byta info x
tailwind byta läge efter hus
user image x
all info
logga ut knapp
lägga till logga in sida

chat:
renskriva
göra chat entity
man ska kunna chatta med varandra och man ska kunna chatta från olika rum


shop:




admin ( jag är admin tills slutet)


frågor:
why serialization


todo:
settings:
uppdatera profileimage password och username



@GetMapping("/userSettings")
    public ResponseEntity<User> userPage() {
        String username = authService.getCurrentUsername();
        User user = userRepository.findByUsername(username);
/*        String base64Image;
        if(user.getImageData() != null) {
            base64Image = Base64.getEncoder().encodeToString(user.getImageData());
        }
        else {
            try {
                Path imagePath = Path.of(resourceLoader.getResource("classpath:images/profile.jpeg").getURI());
                System.out.println(Arrays.toString(Files.readAllBytes(imagePath)));
                user.setImageData(Files.readAllBytes(imagePath));
                base64Image = Base64.getEncoder().encodeToString(user.getImageData());
            } catch (IOException e) {
                e.printStackTrace();

                return null;
            }
        }*/
    /*    Map<String, Object> response = new HashMap<>();
        response.put("user", user);
        response.put("imageData", base64Image);
*/
        return ResponseEntity.ok().body(user);
    }



    cheatcheets

    ALTER TABLE user MODIFY image_data LONGBLOB;






    USE chat_app;

    CREATE TABLE users (
        id INT AUTO_INCREMENT PRIMARY KEY,
        username VARCHAR(50) NOT NULL UNIQUE,
        password VARCHAR(255) NOT NULL,
    );

    CREATE TABLE messages (
        id INT AUTO_INCREMENT PRIMARY KEY,
        user_id INT NOT NULL,
        message TEXT NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    );

    CREATE TABLE chat_rooms (
        id INT AUTO_INCREMENT PRIMARY KEY,
        room_name VARCHAR(50) NOT NULL UNIQUE,
    );

    CREATE TABLE room_messages (
        id INT AUTO_INCREMENT PRIMARY KEY,
        room_id INT NOT NULL,
        user_id INT NOT NULL,
        message TEXT NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (room_id) REFERENCES chat_rooms(id) ON DELETE CASCADE,
        FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    );





CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL
);

CREATE TABLE messages (
    id INT AUTO_INCREMENT PRIMARY KEY,
    sender_id INT NOT NULL,
    receiver_id INT NOT NULL,
    message TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (sender_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (receiver_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE chat_rooms (
    id INT AUTO_INCREMENT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE room_messages (
    id INT AUTO_INCREMENT PRIMARY KEY,
    room_id INT NOT NULL,
    user_id INT NOT NULL,
    message TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (room_id) REFERENCES chat_rooms(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);



user skickar ett meddelande




https://spring.io/guides/gs/messaging-stomp-websocket



todo:
byt frn jwt 
renskriva
lägga till alla fetches i en fil?
logga in och logga ut sida klar - göra så man kommer till den först och inte kan röra annat innan
lägga till fält att uppdatera sin profil
fixa att lägga till bild
fixa att inloggad person är den som skriver meddelandet
fixa att skriva meddelande från det stället


18.00 promme
19.00 middag
duscha
20.00 film
